version: '3.8'

services:
  # API Gateway
  api-gateway:
    build:
      context: ./api-gateway
    ports:
      - "8080:8080"
    environment:
      - SERVICE_P1_URL=http://service-p1:8081
      - SERVICE_P2_URL=http://service-p2:8082
      - SERVICE_P3_URL=http://service-p3:8083
      - SERVICE_P4_URL=http://service-p4:8084
      - SERVICE_P5_URL=http://service-p5:8085
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - service-p1
      - service-p2
      - service-p3
      - service-p4
      - service-p5
      - redis
    restart: unless-stopped

  # Сервис управления справочными данными и интеграции (P1)
  service-p1:
    build:
      context: ./service-p1
    ports:
      - "8081:8081"
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=aircraft_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  # Сервис планирования технического обслуживания (P2)
  service-p2:
    build:
      context: ./service-p2
    ports:
      - "8082:8082"
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=aircraft_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  # Сервис управления исполнением работ (P3)
  service-p3:
    build:
      context: ./service-p3
    ports:
      - "8083:8083"
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=aircraft_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  # Сервис управления складом и потребностями (P4)
  service-p4:
    build:
      context: ./service-p4
    ports:
      - "8084:8084"
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=aircraft_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  # Сервис формирования аналитики и отчетности (P5)
  service-p5:
    build:
      context: ./service-p5
    ports:
      - "8085:8085"
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=aircraft_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  # PostgreSQL - основная база данных
  postgres:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=aircraft_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    restart: unless-stopped

  # Redis - для кеширования и обмена сообщениями
  redis:
    image: redis:6
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped

  # Prometheus - мониторинг
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    restart: unless-stopped

  # Grafana - визуализация метрик
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    restart: unless-stopped

volumes:
  postgres-data:
  redis-data:
  prometheus-data:
  grafana-data: 